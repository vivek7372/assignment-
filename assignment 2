{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ffc0cfb6-d2df-4bf9-9621-caadb22a9184",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Q1.Explain with an example when to use a for loop and a while loop. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1a19f681-0330-4a22-8127-1d985e620d62",
   "metadata": {},
   "outputs": [],
   "source": [
    "# answer= Both for loops and while loops are used for repetitive execution of code,\n",
    "#but they have different use cases depending on the situation.\n",
    "#A for loop is typically used when you know the number of times \n",
    "#you want to iterate or when you want to iterate over a specific range. \n",
    "#It consists of three parts: initialization, condition, and increment/decrement.\n",
    "#Here's an example of a for loop:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f678f84b-fbdc-43cc-a8de-402291cbfe4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "l=[1,2,3,4,5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "786bd280-5d3d-434b-b8ba-8ace930e8f22",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 <class 'int'>\n",
      "2 <class 'int'>\n",
      "3 <class 'int'>\n",
      "4 <class 'int'>\n",
      "5 <class 'int'>\n"
     ]
    }
   ],
   "source": [
    "for i in l:\n",
    "    print(i,type(i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d93a9748-4d45-47b4-abfb-83335cebd8f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2.while loop is used when you don't know the exact\n",
    "#number of iterations beforehand, and the loop continues \n",
    "#until a specific condition is met. Here's an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "14771895-a0d3-4743-9f9d-f612f4f36d4c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "a=1\n",
    "while a <=10:\n",
    "    print(a)\n",
    "    a=a+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ce030203-21fc-4012-b220-945d164eb348",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Q2.Write a python program to print the sum and\n",
    "#product of the first 10 natural numbers using forand while loop."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "63db6fdf-1645-4cc7-9ad4-8f221ae36b09",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "a=1\n",
    "while a <=10:\n",
    "    print(a)\n",
    "    a=a+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b7102ca7-f0f3-49e1-8830-84ef45f09d62",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Q4. Create a list of numbers from 1 to 100.\n",
    "# Use for loop and while loop to calculate the cube of each\n",
    "#number and if the cube of that number is divisible by 4 or 5 the\n",
    "#n append that number in a list and print\n",
    "#that list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36e48d84-b15a-4cf7-9757-41a6b1ff96e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Answer=Python program that creates a list of numbers from 1 to 100,\n",
    "#calculates the cube of each number using both a for loop and a while loop,\n",
    "#checks if the cube is divisible by 4 or 5, and appends the number to a separate list.\n",
    "#Finally, it prints the resulting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b36a0c59-5647-417f-8fd5-75f897b018da",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using a for loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "45b88540-ea92-43c7-8561-b17fa2c98673",
   "metadata": {},
   "outputs": [],
   "source": [
    "numbers = list(range(1, 101))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "63e0a180-ddc6-4161-bf80-06954a45ca46",
   "metadata": {},
   "outputs": [],
   "source": [
    "cubes = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a8f03bb9-d67b-4b4f-b4fc-d068622b3f8e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100]\n"
     ]
    }
   ],
   "source": [
    "for num in numbers:\n",
    "    cube = num ** 3\n",
    "    if cube % 4 == 0 or cube % 5 == 0:\n",
    "        cubes.append(num)\n",
    "\n",
    "print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a734606e-1126-4364-bada-f26dc06a3774",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using a while loop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a79018c0-be08-428a-b910-dc21d5c99491",
   "metadata": {},
   "outputs": [],
   "source": [
    "numbers = list(range(1, 101))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "1b9e32cb-5301-4346-b100-c487e5d01238",
   "metadata": {},
   "outputs": [],
   "source": [
    "cubes = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2c9a5398-f872-4812-be5a-5b371f03668e",
   "metadata": {},
   "outputs": [],
   "source": [
    "count = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "690493af-6ef9-4943-82ce-88ac1131efaa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100]\n"
     ]
    }
   ],
   "source": [
    "while count < len(numbers):\n",
    "    num = numbers[count]\n",
    "    cube = num ** 3\n",
    "    if cube % 4 == 0 or cube % 5 == 0:\n",
    "        cubes.append(num)\n",
    "    count += 1\n",
    "\n",
    "print(cubes)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
